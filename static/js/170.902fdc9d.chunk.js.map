{"version":3,"file":"static/js/170.902fdc9d.chunk.js","mappings":"qOAQe,SAASA,IAEpB,IAAMC,GAASC,EAAAA,EAAAA,MAATD,KACN,EAAmCE,GAAAA,CAAS,mFAAD,OAC0CF,IADlEG,GAAnB,EAAQC,UAAR,EAAmBD,MAAnB,EAAyBE,MAKzBC,EAAAA,GAAAA,eAAoBC,EAAAA,GAGpB,IAAMC,GAAmBC,EAAAA,EAAAA,QAAO,OACXA,EAAAA,EAAAA,QAAO,MA8B5B,OA5BAC,EAAAA,EAAAA,YAAU,WAGNJ,EAAAA,GAAAA,GAAQ,oBAAqB,CACzBK,EAAE,EACFC,SAAU,IACVC,KAAM,aACNC,MAAO,GACPC,cAAe,CACXC,QAAS,oBACTC,SAAS,KAKjBX,EAAAA,GAAAA,GAAQ,gBAAiB,CACrBY,QAAQ,EACRN,SAAU,IACVC,KAAM,SACNC,MAAO,GACPC,cAAe,CACXC,QAAS,gBACTC,SAAS,OAIlB,KAGC,+BACI,gBAAKE,UAAU,2CAAf,UAEI,gBAAKA,UAAU,iBAAf,UAEI,iBAAKA,UAAU,OAAf,WACI,iBAAKA,UAAU,uCAAf,WAGI,gBAAKA,UAAU,eAAf,UACI,eAAIC,IAAKZ,EAAkBW,UAAU,qCAAqCE,GAAG,mBAA7E,wBAEHlB,GAAQA,EAAKmB,KAAI,cAAGD,GAAH,EAAOE,MAAP,IAAeC,EAAf,EAAeA,IAAMC,EAArB,EAAqBA,QAArB,OACd,4BAEI,cAAGN,UAAU,qCAAqCO,wBAAyB,CAAEC,OAAQH,EAAII,iBACzF,cAAGT,UAAU,oBAAoBO,wBAAyB,CAAEC,OAAQH,EAAIK,eACxE,cAAGV,UAAU,oBAAoBO,wBAAyB,CAAEC,OAAQF,EAAQK,sBAMxF,gBAAKX,UAAU,2BAAf,SAEKhB,GAAQA,EAAKmB,KAAI,cAAGD,GAAH,EAAOE,MAAP,IAAeC,EAAf,EAAeA,IAAf,EAAqBC,QAArB,OACd,iBAAKN,UAAU,cAAf,WAEI,iBAAKA,UAAU,mBAAf,WACI,cAAGA,UAAU,oBAAb,wBACA,cAAGA,UAAU,gCAAb,SAA8CK,EAAIO,gBAEtD,iBAAKZ,UAAU,mBAAf,WACI,cAAGA,UAAU,oBAAb,oCACA,cAAGA,UAAU,gCAAb,SAA8CK,EAAIQ,4BAEtD,iBAAKb,UAAU,mBAAf,WACI,cAAGA,UAAU,oBAAb,yBACA,cAAGA,UAAU,gCAAb,SAA8CK,EAAIS","sources":["components/sections/prk_overview.js"],"sourcesContent":["import React from 'react'\r\nimport '../../assets/css/prk_overview.css'\r\nimport useFetch from \"react-fetch-hook\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nexport default function Overview() {\r\n\r\n    let { slug } = useParams(); \r\n    const { isLoading, data, error } = useFetch(\r\n      `https://phpstack-725513-2688800.cloudwaysapps.com/cms/wp-json/wp/v2/parks/?slug=${slug}`\r\n    );\r\n\r\n    // gloabl line GSAP\r\n    gsap.registerPlugin(ScrollTrigger); \r\n\r\n    // Heading text animation variable\r\n    const txt_animate_pi_1 = useRef(null);\r\n    const park_in_fade = useRef(null);\r\n\r\n    useEffect(() => {\r\n    \r\n        // Heading text animation code\r\n        gsap.to(\"#txt_animate_pi_1\", {\r\n            y:0,\r\n            duration: 1.3,\r\n            ease: \"power4.out\",\r\n            delay: 0.3,\r\n            scrollTrigger: {\r\n                trigger: \"#txt_animate_pi_1\",\r\n                markers: false\r\n            }\r\n        });\r\n\r\n        // Para animation code\r\n        gsap.to(\"#park_in_fade\", {\r\n            opacity:1,\r\n            duration: 1.5,\r\n            ease: \"linear\",\r\n            delay: 0.9,\r\n            scrollTrigger: {\r\n                trigger: \"#park_in_fade\",\r\n                markers: false\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className='ovrview_sec snap_sec mob_pd_LR tab_pd_LR'>\r\n                \r\n                <div className='cstm_container'>\r\n\r\n                    <div className='row ' >\r\n                        <div className='col-lg-7 col-md-7 col-12 ovrview_col'>\r\n                            {/* <p className='section_sub_heading ovrview_sub_hd'>Overview</p> */}\r\n\r\n                            <div className=\"animate_txt \">\r\n                                <h2 ref={txt_animate_pi_1} className='section_sub_heading ovrview_sub_hd' id='txt_animate_pi_1'>Overview</h2>\r\n                            </div>\r\n                            {data && data.map(({ id, title , acf , content }) => (\r\n                                <div>\r\n                             \r\n                                    <p className='sub_para ovrview_subpara prk_ovr_1' dangerouslySetInnerHTML={{ __html: acf.park_hd_para }}></p>\r\n                                    <p className='para ovrview_para' dangerouslySetInnerHTML={{ __html: acf.park_para1 }}></p>\r\n                                    <p className='para ovrview_para' dangerouslySetInnerHTML={{ __html: content.rendered }}></p>\r\n                                </div>\r\n                            ))} \r\n\r\n                        </div>\r\n\r\n                        <div className='col-lg-5 col-md-5 col-12'>\r\n\r\n                            {data && data.map(({ id, title , acf , content }) => (\r\n                                <div className='ovrview_div'>\r\n                                    \r\n                                    <div className='ovr_lnd_area_spc'>\r\n                                        <p className='ovrview_subpoints'>Land area</p>\r\n                                        <p className='ovrview_subpoints_sub_heading'>{acf.land_area}</p>\r\n                                    </div>\r\n                                    <div className='ovr_lnd_area_spc'>\r\n                                        <p className='ovrview_subpoints'>development potential</p>\r\n                                        <p className='ovrview_subpoints_sub_heading'>{acf.development_potential}</p>\r\n                                    </div>\r\n                                    <div className='ovr_lnd_area_spc'>\r\n                                        <p className='ovrview_subpoints'>Land usage</p>\r\n                                        <p className='ovrview_subpoints_sub_heading'>{acf.land_usage}</p>\r\n                                    </div>\r\n                                    {/* <div className=''>\r\n                                        <p className='ovrview_subpoints'>Construction status</p>\r\n                                        <p className='ovrview_subpoints_sub_heading'>{acf.construction_status}</p>\r\n                                    </div> */}\r\n\r\n                                </div>\r\n                            ))} \r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Overview","slug","useParams","useFetch","data","isLoading","error","gsap","ScrollTrigger","txt_animate_pi_1","useRef","useEffect","y","duration","ease","delay","scrollTrigger","trigger","markers","opacity","className","ref","id","map","title","acf","content","dangerouslySetInnerHTML","__html","park_hd_para","park_para1","rendered","land_area","development_potential","land_usage"],"sourceRoot":""}